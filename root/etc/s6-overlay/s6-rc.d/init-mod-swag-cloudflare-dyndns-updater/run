#!/usr/bin/with-contenv bash
# shellcheck shell=bash

echo -e "Variables set:\\n\
CLOUDFLARE_HOSTED_DOMAINS=${CLOUDFLARE_HOSTED_DOMAINS}\\n\
CLOUDFLARE_PROXY=${CLOUDFLARE_PROXY:-false}\\n"

# Install required packages
apk add openssl curl jq

# Check if flarectl exist, if not - download latest version and setup
if ! command -v flarectl &> /dev/null
then

    ARCH=""
    case $(uname -m) in
        aarch64) ARCH="arm64" ;;
        arm) ARCH="armv6" ;;
        *) ARCH="amd64" ;; # or x86_64
    esac

    GH_USER_REPO=cloudflare/cloudflare-go    
    GH_RELEASE_LATEST_QUERY_API=https://api.github.com/repos/${GH_USER_REPO}/releases/latest
    GH_RELEASE_LATEST_VERSION=$(curl -s ${GH_RELEASE_LATEST_QUERY_API} | grep "tag_name" | grep -Eo 'v[^\"]*')
    GH_RELEASE_LATEST_URL=$(curl -s ${GH_RELEASE_LATEST_QUERY_API} | grep "browser_download_url.*linux_${ARCH}.tar.xz" | grep -Eo 'https://[^\"]*')
    TMP_DIR=$(openssl rand -hex 4)

    mkdir /tmp/${TMP_DIR} && \
    echo "Downloading ${GH_RELEASE_LATEST_URL} to /tmp/${TMP_DIR}" && \
    $(cd /tmp/${TMP_DIR} && curl -LO ${GH_RELEASE_LATEST_URL}) && \
    tar xvf /tmp/${TMP_DIR}/*linux_amd64.tar.xz -C /tmp/${TMP_DIR} && \
    chmod +x /tmp/${TMP_DIR}/flarectl && \
    mv /tmp/${TMP_DIR}/flarectl /usr/bin/flarectl && \
    rm -Rf /tmp/${TMP_DIR}
fi

# Check if cloudflare.ini exist, and setup cloudflare-dyndns-updater cronjob
if [[ -f /config/dns-conf/cloudflare.ini ]]; then
    export CF_API_TOKEN=$(cat /config/dns-conf/cloudflare.ini | grep '^dns_cloudflare_api_token' | cut -d'=' -f2- | xargs)
    export CF_API_KEY=$(cat /config/dns-conf/cloudflare.ini | grep '^dns_cloudflare_api_key' | cut -d'=' -f2- | xargs)
    export CF_API_EMAIL=$(cat /config/dns-conf/cloudflare.ini | grep '^dns_cloudflare_email' | cut -d'=' -f2- | xargs)
    chmod +x /app/cloudflare-dyndns-updater && \
    cp /app/cloudflare-dyndns-updater /etc/periodic/15min/
fi

# Check if dns_cloudflare_email and dns_cloudflare_api_key is updated from default
if [[ -n "${CF_API_KEY}" && -n "${CF_API_EMAIL}" && ${CF_API_EMAIL} == 'cloudflare@example.com' ]]; then
    echo "System default configuration for /config/dns-conf/cloudflare.ini is found. 
    Update 'dns_cloudflare_email' and 'dns_cloudflare_api_key' accordingly, or comment them out if using 'dns_cloudflare_api_token'.
    'cloudflare-dyndns-updater' will not work correctly."
fi

# Check if dns_cloudflare_api_token exist
if [[ -z "${CF_API_TOKEN}" && -z "${CF_API_KEY}" && -z "${CF_API_EMAIL}" ]]; then
    echo "No 'dns_cloudflare_api_token' found in /config/dns-conf/cloudflare.ini. 
    'cloudflare-dyndns-updater' will not work correctly."
fi
